{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selectGood","good","setState","clearGood","this","className","type","onClick","map","checkGood","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GAAD,OAAkB,EAAKC,SAAS,CAAEH,aAAcE,KAL/D,EAOEE,UAAY,kBAAM,EAAKD,SAAS,CAAEH,aAAc,MAPlD,4CASE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACIN,EAGA,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKJ,kBAVX,oBAAIE,UAAU,QAAd,+BAgBF,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACP,GACV,IAAMQ,EAAYV,IAAiBE,EAEnC,OACE,qBACE,UAAQ,OAERI,UAAWK,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACIA,EAUA,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,UAJhB,eATA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,WAAWC,IAJjC,iBAoBJ,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MA5BEA,iBAvCvB,GAAyBU,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cbcd049.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good: string) => this.setState({ selectedGood: good });\n\n  clearGood = () => this.setState({ selectedGood: '' });\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {!selectedGood ? (\n          <h1 className=\"title\">No goods selected</h1>\n        ) : (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => {\n                this.clearGood();\n              }}\n            />\n          </h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const checkGood = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames({\n                    'has-background-success-light': checkGood,\n                  })}\n                >\n                  <td>\n                    {!checkGood ? (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.selectGood(good)}\n                      >\n                        +\n                      </button>\n                    ) : (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.clearGood}\n                      >\n                        -\n                      </button>\n                    )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}